service: serverless-sms-api

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-offline-sns

custom:
  dynamodb:
    stages:
      -dev
    start:
      port: 8000
      inMemory: true
      migrate: true
    migration:
      dir: offline/migrations

provider:
  name: aws
  runtime: nodejs10.x
  region: 'us-east-1'
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
    - Effect: "Allow"
      Resource: "*"
      Action:
        - "sns:*"

functions:
  create:
    handler: sms/create.create
    events:
      - http:
          path: sms
          method: post
          cors: true

  list:
    handler: sms/list.list
    events:
      - http:
          path: sms
          method: get
          cors: true

  get:
    handler: sms/get.get
    events:
      - http:
          path: sms/{id}
          method: get
          cors: true

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
